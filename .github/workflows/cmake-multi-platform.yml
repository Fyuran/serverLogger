# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: VCPKG

on:
  release:
    types: [created]
    
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - os: ubuntu-24.04
          artifactname: 'btc_serverLogger_x64.so'
          container: debian:bookworm
          cfgpreset: 'ninja-multi-vcpkg'
          buildp: 'ninja-vcpkg-release'
          outputfolder: './out/build/ninja-multi-vcpkg/Release/btc_serverLogger_x64.so'
        - os: windows-2022
          artifactname: 'btc_serverLogger_x64.dll'
          cfgpreset: 'ninja-multi-windows-vcpkg'
          buildp: 'ninja-vcpkg-windows-release'
          outputfolder: './out/build/ninja-multi-windows-vcpkg/Release/btc_serverLogger_x64.dll'
          
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.container }}
    steps:
      - name: Install Act dependencies
        if: ${{ (env.ACT) &&  (runner.os == 'Linux') }}
        run: |
          apt update && apt install sudo -y
          sudo apt upgrade -y
          sudo apt install unzip git nodejs curl build-essential -y
      - name: Install dependencies
        if: ${{ (!env.ACT) &&  (runner.os == 'Linux') }}
        run: |
          apt update
          apt upgrade -y
          apt install unzip git nodejs curl build-essential -y
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: lukka/get-cmake@latest
      - name: Setup anew (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11
      - name: Run CMake consuming CMakePreset.json and run vcpkg to build packages
        uses: lukka/run-cmake@v10
        with:
          # This is the default path to the CMakeLists.txt along side the
          # CMakePresets.json. Change if you need have CMakeLists.txt and CMakePresets.json
          # located elsewhere.
          # cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ${{ matrix.config.cfgpreset }}
          # Additional arguments can be appended to the cmake command.
          # This is useful to reduce the number of CMake's Presets since you can reuse
          # an existing preset with different variables.
          # configurePresetAdditionalArgs: "['-DENABLE_YOUR_FEATURE=1']"

          # This is the name of the CMakePresets.json's configuration to build the project.
          buildPreset: ${{ matrix.config.buildp }}
      - uses: actions/upload-artifact@v4
        with:
          # Name of the artifact to upload.
          # Optional. Default is 'artifact'
          name: ${{ matrix.config.artifactname }}

          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: ${{ matrix.config.outputfolder }}

          # The desired behavior if no files are found using the provided path.
          # Available Options:
          #   warn: Output a warning but do not fail the action
          #   error: Fail the action with an error message
          #   ignore: Do not output any warnings or errors, the action does not fail
          # Optional. Default is 'warn'
          if-no-files-found: error

          # Duration after which artifact will expire in days. 0 means using default retention.
          # Minimum 1 day.
          # Maximum 90 days unless changed from the repository settings page.
          # Optional. Defaults to repository settings.
          # retention-days:

          # The level of compression for Zlib to be applied to the artifact archive.
          # The value can range from 0 to 9.
          # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
          # Optional. Default is '6'
          compression-level: 0

          # If true, an artifact with a matching name will be deleted before a new one is uploaded.
          # If false, the action will fail if an artifact for the given name already exists.
          # Does not fail if the artifact does not exist.
          # Optional. Default is 'false'
          # overwrite:

          # Whether to include hidden files in the provided path in the artifact
          # The file contents of any hidden files in the path should be validated before
          # enabled this to avoid uploading sensitive information.
          # Optional. Default is 'false'
          # include-hidden-files:
